<%- include('./partials/header'); %>
    <!-- Recent Sales Start -->
    <div class="container-fluid pt-4 pi-4">
        <div class="bg-light teit-center rounded p-4">
            <div class="d-flei align-items-center justify-content-between mb-4">
                <div class="row">
                    <h6 class="mb-0 mt-1 col-10">Order Details</h6>
                    <!-- <div class="col-1"> <button class="btn btn-sm btn-info  "
                            onclick="location.href='orders'">Back</button>
                    </div> -->
                </div>
            </div>
            <div class="table-responsive">
                <table class="table teit-start align-middle table-bordered table-hover mb-0">
                    <thead>
                        <tr class="teit-dark">
                            <th scope="col"><input class="form-check-input" type="checkboi"></th>
                            <th scope="col">Product Name</th>
                            <th scope="col">Quantity</th>
                            <th scope="col">Total Price</th>
                            <th scope="col">Status</th>
                            <th scope="col" colspan="2">Mark as</th>
                        </tr>
                    </thead>
                    <% if (orderDetails.length> 0) { %>

                        <% for (let i=0; i < orderDetails.length; i++) { %>

                            <tbody>
                                <tr>
                                    <td><input class="form-check-input" type="checkboi"></td>
                                    <td>
                                        <%= orderDetails[i].ProductId.name %>
                                    </td>

                                    <td>
                                        <%= orderDetails[i].quantity %>
                                    </td>
                                    <td>â‚¹
                                        <%= orderDetails[i].total %>
                                    </td>
                                    <td>
                                        <%= orderDetails[i].status %>
                                    </td>
                                    <td>
                                        <%if(!orderDetails[i]?.isDelevered &&!orderDetails[i]?.isCancelled
                                            &&orderDetails[i]?.status !=='Cancelled' &&orderDetails[i]?.status
                                            !=='on payment' ){%>

                                            <button class="btn btn-sm btn-success "
                                                onclick="deleverOneItem('<%=orderDetails[i]._id%>','<%=oid%>')">
                                                Delevered
                                            </button>
                                            <button class="btn btn-sm btn-warning "
                                                onclick="shipOneItem('<%=orderDetails[i]._id%>','<%=oid%>')">
                                                Shipped
                                            </button>

                                            <button class="btn btn-sm btn-warning "
                                                onclick="markAsOnDelevery('<%=orderDetails[i]._id%>','<%=oid%>')">
                                                On Delevery
                                            </button>

                                            <button class="btn btn-sm btn-warning "
                                                onclick="markAsPlaced('<%=orderDetails[i]._id%>','<%=oid%>')">
                                                Placed
                                            </button>


                                            <%}else{%>

                                                <button class="btn btn-sm btn-secondary " disabled>
                                                    Delevered
                                                </button>

                                                <button class="btn btn-sm btn-secondary " disabled>
                                                    Shipped
                                                </button>

                                                <button class="btn btn-sm btn-secondary " disabled>
                                                    On Delevery
                                                </button>

                                                <button class="btn btn-sm btn-secondary " disabled>
                                                    Placed
                                                </button>




                                                <% } %>
                                    </td>
                                </tr>
                                <% } %>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="7">No Order Items </a>
                                            </td>

                                        </tr>
                                        <% } %>
                </table>
            </div>
        </div>
    </div>
    <!-- Recent Sales End -->

    <script>
        function deleverOneItem(iid, oid) {
            // Show confirmation dialog using SweetAlert
            Swal.fire({
                title: 'Are you sure?',
                text: "This action will mark this item as delivered!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, deliver it!',
                cancelButtonText: 'No, cancel!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Send PUT request using Axios if confirmed
                    axios.put(`/admin/deleverOneItem?iid=${iid}&oid=${oid}`)
                        .then((response) => {
                            Swal.fire(
                                'Delivered!',
                                'The item has been marked as delivered.',
                                'success'
                            ).then(() => {
                                window.location.reload(); // Reload the page to reflect the change
                            });
                        })
                        .catch((error) => {
                            Swal.fire(
                                'Error!',
                                'There was a problem delivering the item. Please try again.',
                                'error'
                            );
                            console.error("Error delivering item:", error);
                        });
                } else {
                    Swal.fire(
                        'Cancelled',
                        'The item delivery process was cancelled.',
                        'info'
                    );
                }
            });
        };


        function shipOneItem(iid, oid) {
            // Show confirmation dialog using SweetAlert
            Swal.fire({
                title: 'Are you sure?',
                text: "This action will mark this item as Shipped!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Shipped it!',
                cancelButtonText: 'No, cancel!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Send PUT request using Axios if confirmed
                    axios.put(`/admin/shipOneItem?iid=${iid}&oid=${oid}`)
                        .then((response) => {
                            Swal.fire(
                                'Shipped!',
                                'The item has been marked as Shipped.',
                                'success'
                            ).then(() => {
                                window.location.reload(); // Reload the page to reflect the change
                            });
                        })
                        .catch((error) => {
                            Swal.fire(
                                'Error!',
                                'There was a problem Shipping the item. Please try again.',
                                'error'
                            );
                            console.error("Error shipping item:", error);
                        });
                } else {
                    Swal.fire(
                        'Cancelled',
                        'The item Shipping process was cancelled.',
                        'info'
                    );
                }
            });
        }

        function markAsOnDelevery(iid, oid) {
            // Show confirmation dialog using SweetAlert
            Swal.fire({
                title: 'Are you sure?',
                text: "This action will mark this item as On Delevery!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, make it!',
                cancelButtonText: 'No, cancel!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Send PUT request using Axios if confirmed
                    axios.put(`/admin/markAsOnDelevery?iid=${iid}&oid=${oid}`)
                        .then((response) => {
                            Swal.fire(
                                'Changed!',
                                'The item has been marked as On Delevery.',
                                'success'
                            ).then(() => {
                                window.location.reload(); // Reload the page to reflect the change
                            });
                        })
                        .catch((error) => {
                            Swal.fire(
                                'Error!',
                                'There was a problem on changing the item status. Please try again.',
                                'error'
                            );
                            console.error("Error markAsOnDelevery item:", error);
                        });
                } else {
                    Swal.fire(
                        'Cancelled',
                        'The item status changing process was cancelled.',
                        'info'
                    );
                }
            });
        }

        function markAsPlaced(iid, oid) {
            // Show confirmation dialog using SweetAlert
            Swal.fire({
                title: 'Are you sure?',
                text: "This action will mark this item as placed!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, make it!',
                cancelButtonText: 'No, cancel!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Send PUT request using Axios if confirmed
                    axios.put(`/admin/placeOneItem?iid=${iid}&oid=${oid}`)
                        .then((response) => {
                            Swal.fire(
                                'Changed!',
                                'The item has been marked as Placed.',
                                'success'
                            ).then(() => {
                                window.location.reload(); // Reload the page to reflect the change
                            });
                        })
                        .catch((error) => {
                            Swal.fire(
                                'Error!',
                                'There was a problem on placing the item. Please try again.',
                                'error'
                            );
                            console.error("Error mark As Placed item:", error);
                        });
                } else {
                    Swal.fire(
                        'Cancelled',
                        'The item status changing process was cancelled.',
                        'info'
                    );
                }
            });
        }

    </script>
    <%- include('./partials/footer'); %>